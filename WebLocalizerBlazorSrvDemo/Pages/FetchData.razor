@page "/fetchdata"

@*@implements IDisposable*@

@using System.Globalization
@using WebLocalizerBlazorSrvDemo.Components
@using WebLocalizerBlazorSrvDemo.Data

@inject WeatherForecastService forecastService
@inject INotifierService notifierService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp.&nbsp;(C)</th>
                <th>Temp.&nbsp;(F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td><Localize Instance="@forecast" Property="@nameof(WeatherForecast.Summary)" Id="@forecast.Id.ToString()">@forecast.Summary</Localize></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;

    protected override void OnInitialized()
    {
        this.forecasts = this.forecastService.GetForecast();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            this.notifierService.NotifyAsync(CultureInfo.CurrentCulture.Name);
        }
    }

    protected override bool ShouldRender()
    {
        return base.ShouldRender();
    }
}
